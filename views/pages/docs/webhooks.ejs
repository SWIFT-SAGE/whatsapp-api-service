<!-- Webhooks Documentation Page -->
<!DOCTYPE html>
<html lang="en">
<head>
    <%- include('../../partials/head') %>
</head>
<body>
    <!-- Navigation -->
    <nav class="navbar navbar-expand-lg navbar-dark fixed-top">
        <div class="container">
            <a class="navbar-brand" href="/">
                <i class="fab fa-whatsapp me-2"></i>
                <strong>API MESSINGIN</strong>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/#pricing">Pricing</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/api-docs">API Docs</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/#login">Login</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/#register">Sign Up</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    <div class="container-fluid">
        <div class="docs-container">
            <div class="docs-sidebar">
                <h5>API Documentation</h5>
                <nav class="docs-nav">
                    <a href="/api-docs/docs/authentication" class="<%= currentPage === 'authentication' ? 'active' : '' %>">Authentication</a>
                    <a href="/api-docs/docs/sessions" class="<%= currentPage === 'sessions' ? 'active' : '' %>">Sessions</a>
                    <a href="/api-docs/docs/messages" class="<%= currentPage === 'messages' ? 'active' : '' %>">Messages</a>
                    <a href="/api-docs/docs/webhooks" class="<%= currentPage === 'webhooks' ? 'active' : '' %>">Webhooks</a>
                    <a href="/api-docs/docs/rate-limiting" class="<%= currentPage === 'rate-limiting' ? 'active' : '' %>">Rate Limiting</a>
                    <a href="/api-docs/docs/error-codes" class="<%= currentPage === 'error-codes' ? 'active' : '' %>">Error Codes</a>
                    <a href="/api-docs/docs/sdks-libraries" class="<%= currentPage === 'sdks-libraries' ? 'active' : '' %>">SDKs & Libraries</a>
                    <a href="/api-docs/docs/api-testing" class="<%= currentPage === 'api-testing' ? 'active' : '' %>">API Testing</a>
                    <a href="/api-docs/docs/code-examples" class="<%= currentPage === 'code-examples' ? 'active' : '' %>">Code Examples</a>
                </nav>
            </div>
            <div class="docs-content">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/api-docs">API Documentation</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Webhooks</li>
                </ol>
            </nav>
            
            <h1>WhatsApp Webhooks</h1>
            <div class="alert alert-info">
                <p><strong>Webhooks</strong> allow you to receive real-time notifications when events occur in your WhatsApp sessions, such as incoming messages or status updates.</p>
            </div>
            
            <h2>Setting Up Webhooks</h2>
            <p>To receive webhook notifications, you need to configure a webhook URL in your account settings. This URL should be a publicly accessible endpoint on your server that can receive POST requests.</p>
            
            <div class="card mb-4">
                <div class="card-header bg-primary text-white">
                    <h3 class="mb-0">Configure Webhook</h3>
                </div>
                <div class="card-body">
                    <div class="api-endpoint mb-3">
                        <span class="method post">POST</span>
                        <span class="url">/api/v1/webhooks/config</span>
                    </div>
                    
                    <p>Sets up or updates your webhook configuration.</p>
                    
                    <h4>Request Parameters</h4>
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Parameter</th>
                                <th>Type</th>
                                <th>Required</th>
                                <th>Description</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><code>url</code></td>
                                <td>string</td>
                                <td>Required</td>
                                <td>Your webhook URL (must be HTTPS for production)</td>
                            </tr>
                            <tr>
                                <td><code>events</code></td>
                                <td>array</td>
                                <td>Required</td>
                                <td>Array of event types to subscribe to</td>
                            </tr>
                            <tr>
                                <td><code>secret</code></td>
                                <td>string</td>
                                <td>Optional</td>
                                <td>Secret key for webhook signature verification</td>
                            </tr>
                        </tbody>
                    </table>
                    
                    <h4>Available Event Types</h4>
                    <ul>
                        <li><code>message.received</code> - Incoming messages</li>
                        <li><code>message.status</code> - Message status updates</li>
                        <li><code>session.status</code> - Session status changes</li>
                        <li><code>qr.ready</code> - QR code is ready for scanning</li>
                        <li><code>qr.scanned</code> - QR code has been scanned</li>
                    </ul>
                    
                    <h4>Response</h4>
                    <pre><code>{
  "success": true,
  "data": {
    "webhookId": "wh_123abc",
    "url": "https://your-server.com/webhook",
    "events": ["message.received", "message.status"],
    "createdAt": "2025-09-14T16:30:00Z"
  }
}</code></pre>
                    
                    <h4>cURL Example</h4>
                    <pre><code>curl -X POST \
  -H "Authorization: Bearer YOUR_API_KEY" \
  -H "Content-Type: application/json" \
  -d '{
    "url": "https://your-server.com/webhook",
    "events": ["message.received", "message.status"],
    "secret": "your-webhook-secret"
  }' \
  https://api.messingin.com/v1/webhooks/config</code></pre>
                </div>
            </div>
            
            <h2>Webhook Payloads</h2>
            <p>When an event occurs, we'll send a POST request to your webhook URL with a JSON payload containing event details.</p>
            
            <div class="card mb-4">
                <div class="card-header bg-secondary text-white">
                    <h3 class="mb-0">Incoming Message Event</h3>
                </div>
                <div class="card-body">
                    <h4>Event Type: <code>message.received</code></h4>
                    <p>Triggered when a new message is received in one of your WhatsApp sessions.</p>
                    
                    <h4>Payload Example</h4>
                    <pre><code>{
  "event": "message.received",
  "timestamp": "2025-09-14T16:45:00Z",
  "data": {
    "messageId": "msg_xyz789",
    "sessionId": "session_123abc",
    "from": "14155552671",
    "type": "text",
    "content": {
      "text": "Hello, how are you?"
    },
    "timestamp": "2025-09-14T16:44:55Z",
    "isGroup": false
  }
}</code></pre>
                    
                    <h4>Media Message Payload Example</h4>
                    <pre><code>{
  "event": "message.received",
  "timestamp": "2025-09-14T16:50:00Z",
  "data": {
    "messageId": "msg_abc123",
    "sessionId": "session_123abc",
    "from": "14155552671",
    "type": "image",
    "content": {
      "caption": "Check this out!",
      "mimeType": "image/jpeg",
      "mediaUrl": "https://api.messingin.com/v1/media/img_abc123"
    },
    "timestamp": "2025-09-14T16:49:55Z",
    "isGroup": false
  }
}</code></pre>
                </div>
            </div>
            
            <div class="card mb-4">
                <div class="card-header bg-secondary text-white">
                    <h3 class="mb-0">Message Status Event</h3>
                </div>
                <div class="card-body">
                    <h4>Event Type: <code>message.status</code></h4>
                    <p>Triggered when the status of a sent message changes (delivered, read, etc.).</p>
                    
                    <h4>Payload Example</h4>
                    <pre><code>{
  "event": "message.status",
  "timestamp": "2025-09-14T16:55:00Z",
  "data": {
    "messageId": "msg_def456",
    "sessionId": "session_123abc",
    "to": "14155552671",
    "status": "read",
    "timestamp": "2025-09-14T16:54:55Z"
  }
}</code></pre>
                </div>
            </div>
            
            <div class="card mb-4">
                <div class="card-header bg-secondary text-white">
                    <h3 class="mb-0">Session Status Event</h3>
                </div>
                <div class="card-body">
                    <h4>Event Type: <code>session.status</code></h4>
                    <p>Triggered when the status of a WhatsApp session changes.</p>
                    
                    <h4>Payload Example</h4>
                    <pre><code>{
  "event": "session.status",
  "timestamp": "2025-09-14T17:00:00Z",
  "data": {
    "sessionId": "session_123abc",
    "status": "connected",
    "previousStatus": "pending",
    "timestamp": "2025-09-14T16:59:55Z"
  }
}</code></pre>
                </div>
            </div>
            
            <h2>Webhook Security</h2>
            <p>To ensure that webhook requests are coming from our service and not from a malicious third party, we sign each webhook request with a signature.</p>
            
            <div class="card mb-4">
                <div class="card-header bg-warning text-dark">
                    <h3 class="mb-0">Verifying Webhook Signatures</h3>
                </div>
                <div class="card-body">
                    <p>Each webhook request includes a <code>X-Webhook-Signature</code> header. This signature is a HMAC SHA-256 hash of the request body using your webhook secret as the key.</p>
                    
                    <h4>Verification Steps</h4>
                    <ol>
                        <li>Extract the <code>X-Webhook-Signature</code> header from the request</li>
                        <li>Compute the HMAC SHA-256 hash of the raw request body using your webhook secret</li>
                        <li>Compare the computed hash with the signature in the header</li>
                        <li>If they match, the webhook is authentic; if not, reject it</li>
                    </ol>
                    
                    <h4>Code Examples</h4>
                    
                    <div class="code-tabs">
                        <ul class="nav nav-tabs" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link active" id="node-tab" data-toggle="tab" href="#node" role="tab">Node.js</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="python-tab" data-toggle="tab" href="#python" role="tab">Python</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="php-tab" data-toggle="tab" href="#php" role="tab">PHP</a>
                            </li>
                        </ul>
                        
                        <div class="tab-content">
                            <div class="tab-pane fade show active" id="node" role="tabpanel">
                                <pre><code>const crypto = require('crypto');
const express = require('express');
const app = express();

app.use(express.json({
  verify: (req, res, buf) => {
    req.rawBody = buf;
  }
}));

app.post('/webhook', (req, res) => {
  const signature = req.headers['x-webhook-signature'];
  const webhookSecret = 'your-webhook-secret';
  
  const hmac = crypto.createHmac('sha256', webhookSecret);
  const computedSignature = hmac.update(req.rawBody).digest('hex');
  
  if (crypto.timingSafeEqual(
    Buffer.from(signature),
    Buffer.from(computedSignature)
  )) {
    // Signature is valid, process the webhook
    console.log('Webhook verified:', req.body);
    res.status(200).send('Webhook received');
  } else {
    // Signature is invalid
    console.error('Invalid webhook signature');
    res.status(401).send('Invalid signature');
  }
});

app.listen(3000, () => {
  console.log('Webhook server listening on port 3000');
});</code></pre>
                            </div>
                            
                            <div class="tab-pane fade" id="python" role="tabpanel">
                                <pre><code>import hmac
import hashlib
from flask import Flask, request, jsonify

app = Flask(__name__)

@app.route('/webhook', methods=['POST'])
def webhook():
    signature = request.headers.get('X-Webhook-Signature')
    webhook_secret = 'your-webhook-secret'
    
    # Get the raw request body
    request_data = request.get_data()
    
    # Compute the signature
    computed_signature = hmac.new(
        webhook_secret.encode('utf-8'),
        request_data,
        hashlib.sha256
    ).hexdigest()
    
    # Compare signatures
    if hmac.compare_digest(signature, computed_signature):
        # Signature is valid, process the webhook
        print('Webhook verified:', request.json)
        return jsonify({'status': 'success'}), 200
    else:
        # Signature is invalid
        print('Invalid webhook signature')
        return jsonify({'error': 'Invalid signature'}), 401

if __name__ == '__main__':
    app.run(port=3000)</code></pre>
                            </div>
                            
                            <div class="tab-pane fade" id="php" role="tabpanel">
                                <pre><code>&lt;?php
$webhookSecret = 'your-webhook-secret';

// Get the signature from the headers
$signature = $_SERVER['HTTP_X_WEBHOOK_SIGNATURE'] ?? '';

// Get the raw request body
$requestBody = file_get_contents('php://input');

// Compute the signature
$computedSignature = hash_hmac('sha256', $requestBody, $webhookSecret);

// Compare signatures
if (hash_equals($signature, $computedSignature)) {
    // Signature is valid, process the webhook
    $payload = json_decode($requestBody, true);
    echo json_encode(['status' => 'success']);
} else {
    // Signature is invalid
    http_response_code(401);
    echo json_encode(['error' => 'Invalid signature']);
}
?&gt;</code></pre>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <h2>Best Practices</h2>
            <div class="card mb-4">
                <div class="card-body">
                    <h4>Webhook Implementation Tips</h4>
                    <ul>
                        <li><strong>Respond quickly</strong>: Your webhook endpoint should respond with a 200 status code as quickly as possible (within 5 seconds). Process the webhook data asynchronously if needed.</li>
                        <li><strong>Handle retries</strong>: If your endpoint is unavailable, we'll retry the webhook delivery with exponential backoff for up to 24 hours.</li>
                        <li><strong>Implement idempotency</strong>: Design your webhook handler to be idempotent, as the same webhook might be delivered multiple times in rare cases.</li>
                        <li><strong>Use HTTPS</strong>: Always use HTTPS for your webhook URL in production to ensure secure data transmission.</li>
                        <li><strong>Validate signatures</strong>: Always verify the webhook signature to ensure the request is authentic.</li>
                        <li><strong>Monitor webhook deliveries</strong>: Use the webhook logs in your dashboard to monitor successful and failed webhook deliveries.</li>
                    </ul>
                </div>
            </div>
            
            <div class="card mb-4">
                <div class="card-header bg-info text-white">
                    <h3 class="mb-0">Testing Webhooks</h3>
                </div>
                <div class="card-body">
                    <p>You can test your webhook implementation using our webhook testing tool:</p>
                    
                    <div class="api-endpoint mb-3">
                        <span class="method post">POST</span>
                        <span class="url">/api/v1/webhooks/test</span>
                    </div>
                    
                    <p>Sends a test webhook to your configured webhook URL.</p>
                    
                    <h4>Request Parameters</h4>
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Parameter</th>
                                <th>Type</th>
                                <th>Required</th>
                                <th>Description</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><code>event</code></td>
                                <td>string</td>
                                <td>Required</td>
                                <td>Event type to test</td>
                            </tr>
                        </tbody>
                    </table>
                    
                    <h4>Response</h4>
                    <pre><code>{
  "success": true,
  "data": {
    "delivered": true,
    "statusCode": 200,
    "responseTime": 120,
    "timestamp": "2025-09-14T17:15:00Z"
  }
}</code></pre>
                    
                    <h4>cURL Example</h4>
                    <pre><code>curl -X POST \
  -H "Authorization: Bearer YOUR_API_KEY" \
  -H "Content-Type: application/json" \
  -d '{"event": "message.received"}' \
  https://api.messingin.com/v1/webhooks/test</code></pre>
                </div>
            </div>
        </div>
    </div>
    
    <%- include('../../partials/modals') %>
    <%- include('../../partials/toast') %>
    <%- include('../../partials/scripts') %>
</body>
</html>