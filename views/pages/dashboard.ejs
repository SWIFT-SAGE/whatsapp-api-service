<!-- Dashboard View -->
<div id="dashboard-view" class="view" style="display: none;">
    <div class="dashboard-container">
        <div class="container-fluid">
            <div class="row">
                <!-- Sidebar -->
                <div class="col-lg-3 col-xl-2 px-0">
                    <div class="sidebar">
                        <div class="sidebar-header">
                            <h5><i class="fas fa-tachometer-alt me-2"></i>Dashboard</h5>
                        </div>
                        <nav class="sidebar-nav">
                            <a href="#" class="nav-link active" data-section="overview">
                                <i class="fas fa-chart-line me-2"></i>Overview
                            </a>
                            <a href="#" class="nav-link" data-section="sessions">
                                <i class="fas fa-mobile-alt me-2"></i>Sessions
                            </a>
                            <a href="#" class="nav-link" data-section="messages">
                                <i class="fas fa-comments me-2"></i>Messages
                            </a>
                            <a href="#" class="nav-link" data-section="chatbot" id="chatbot-nav" style="display: none;">
                                <i class="fas fa-robot me-2"></i>Chatbot
                            </a>
                            <a href="#" class="nav-link" data-section="webhooks">
                                <i class="fas fa-webhook me-2"></i>Webhooks
                            </a>
                            <a href="#" class="nav-link" data-section="analytics">
                                <i class="fas fa-chart-bar me-2"></i>Analytics
                            </a>
                            <a href="#" class="nav-link" data-section="billing">
                                <i class="fas fa-credit-card me-2"></i>Billing
                            </a>
                            <a href="#" class="nav-link" data-view="api-docs">
                                <i class="fas fa-code me-2"></i>API Docs
                            </a>
                        </nav>
                    </div>
                </div>

                <!-- Main Content -->
                <div class="col-lg-9 col-xl-10">
                    <div class="dashboard-content">
                        <!-- Overview Section -->
                        <div id="dashboard-overview" class="dashboard-section">
                            <div class="d-flex justify-content-between align-items-center mb-4">
                                <h2>Dashboard Overview</h2>
                                <div class="badge bg-success fs-6" id="plan-badge">Basic Plan</div>
                            </div>

                            <!-- Stats Cards -->
                            <div class="row g-4 mb-5">
                                <div class="col-lg-3 col-md-6">
                                    <div class="stat-card">
                                        <div class="stat-icon text-primary">
                                            <i class="fas fa-paper-plane"></i>
                                        </div>
                                        <div class="stat-info">
                                            <h3 id="messages-sent" data-stat="totalMessages"><%= stats.totalMessages.toLocaleString() %></h3>
                                            <p>Messages Sent</p>
                                            <small class="text-muted">of 10,000 this month</small>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-6">
                                    <div class="stat-card">
                                        <div class="stat-icon text-success">
                                            <i class="fas fa-mobile-alt"></i>
                                        </div>
                                        <div class="stat-info">
                                            <h3 id="active-sessions" data-stat="activeSessions"><%= stats.activeSessions %></h3>
                                            <p>Active Sessions</p>
                                            <small class="text-muted">WhatsApp connected</small>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-6">
                                    <div class="stat-card">
                                        <div class="stat-icon text-warning">
                                            <i class="fas fa-chart-bar"></i>
                                        </div>
                                        <div class="stat-info">
                                            <h3 data-stat="deliveryRate"><%= stats.deliveryRate %>%</h3>
                                            <p>Delivery Rate</p>
                                            <small class="text-muted">Last 30 days</small>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-6">
                                    <div class="stat-card">
                                        <div class="stat-icon text-info">
                                            <i class="fas fa-key"></i>
                                        </div>
                                        <div class="stat-info">
                                            <h3><%= stats.totalSessions %></h3>
                                            <p>Total Sessions</p>
                                            <small class="text-muted">All systems operational</small>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Usage Analytics -->
                            <div class="card mb-5">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-center mb-3">
                                        <h5 class="card-title m-0"><i class="fas fa-chart-line me-2"></i>Usage Analytics</h5>
                                        <span class="text-muted small">Last 30 days</span>
                                    </div>
                                    <canvas id="messagesChart" height="100"></canvas>
                                </div>
                            </div>

                            <!-- Quick Actions -->
                            <div class="row g-4">
                                <div class="col-md-6">
                                    <div class="card">
                                        <div class="card-body">
                                            <h5 class="card-title">
                                                <i class="fas fa-paper-plane me-2"></i>Quick Send Message
                                            </h5>
                                            <form id="quick-message-form">
                                                <div class="mb-3">
                                                    <label class="form-label">Phone Number</label>
                                                    <input type="tel" class="form-control" placeholder="+1234567890" required>
                                                </div>
                                                <div class="mb-3">
                                                    <label class="form-label">Message</label>
                                                    <textarea class="form-control" rows="3" placeholder="Enter your message here..." required></textarea>
                                                </div>
                                                <button type="submit" class="btn btn-primary">
                                                    <i class="fas fa-send me-2"></i>Send Message
                                                </button>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="card">
                                        <div class="card-body">
                                            <h5 class="card-title">
                                                <i class="fas fa-key me-2"></i>API Key
                                            </h5>
                                            <p class="text-muted">Use this key to authenticate your API requests</p>
                                            <div class="input-group">
                                                <input type="password" class="form-control" id="api-key" value="<%= (user && user.apiKey) ? user.apiKey : 'Not generated' %>" readonly>
                                                <% if (user && user.apiKey) { %>
                                                <button class="btn btn-outline-secondary" type="button" id="toggle-api-key">
                                                    <i class="fas fa-eye" id="api-key-icon"></i>
                                                </button>
                                                <button class="btn btn-outline-secondary" type="button" id="copy-api-key">
                                                    <i class="fas fa-copy"></i>
                                                </button>
                                                <% } else { %>
                                                <button class="btn btn-primary" type="button" id="generate-api-key">
                                                    <i class="fas fa-plus me-2"></i>Generate Key
                                                </button>
                                                <% } %>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Sessions Section -->
                        <div id="dashboard-sessions" class="dashboard-section" style="display: none;">
                            <div class="d-flex justify-content-between align-items-center mb-4">
                                <h2>WhatsApp Sessions</h2>
                                <button class="btn btn-primary" id="create-session-btn">
                                    <i class="fas fa-plus me-2"></i>New Session
                                </button>
                            </div>
                            <div class="row g-4" id="sessions-container">
                                <% if (sessions && sessions.length > 0) { %>
                                    <% sessions.forEach((session, index) => { %>
                                    <div class="col-md-6">
                                        <div class="card session-card">
                                            <div class="card-body">
                                                <div class="d-flex justify-content-between align-items-start mb-3">
                                                    <h5>Session #<%= index + 1 %></h5>
                                                    <span class="badge bg-<%= session.status === 'connected' ? 'success' : session.status === 'connecting' ? 'warning' : 'secondary' %>">
                                                        <%= session.status.charAt(0).toUpperCase() + session.status.slice(1) %>
                                                    </span>
                                                </div>
                                                <p><strong>Session ID:</strong> <%= session.sessionId %></p>
                                                <p><strong>Phone:</strong> <%= session.phoneNumber || 'Not connected' %></p>
                                                <p><strong>Status:</strong> <%= session.status %></p>
                                                <p><strong>Created:</strong> <%= new Date(session.createdAt).toLocaleDateString() %></p>
                                                <% if (session.status === 'connected') { %>
                                                <button class="btn btn-outline-danger btn-sm" data-action="disconnect-session" data-session="<%= session.sessionId %>">
                                                    <i class="fas fa-unlink me-1"></i>Disconnect
                                                </button>
                                                <% } else if (session.status === 'disconnected') { %>
                                                <button class="btn btn-outline-primary btn-sm" data-action="connect-session" data-session="<%= session.sessionId %>">
                                                    <i class="fas fa-link me-1"></i>Connect
                                                </button>
                                                <% } %>
                                            </div>
                                        </div>
                                    </div>
                                    <% }); %>
                                <% } else { %>
                                    <div class="col-12">
                                        <div class="text-center py-5">
                                            <i class="fas fa-mobile-alt fa-3x text-muted mb-3"></i>
                                            <h5 class="text-muted">No sessions yet</h5>
                                            <p class="text-muted">Create your first WhatsApp session to get started</p>
                                            <button class="btn btn-primary" id="create-first-session-btn">
                                                <i class="fas fa-plus me-2"></i>Create Session
                                            </button>
                                        </div>
                                    </div>
                                <% } %>
                            </div>
                        </div>

                        <!-- Messages Section -->
                        <div id="dashboard-messages" class="dashboard-section" style="display: none;">
                            <div class="d-flex flex-wrap gap-2 justify-content-between align-items-center mb-4">
                                <h2 class="m-0">Recent Messages</h2>
                                <div class="d-flex flex-wrap gap-2">
                                    <div class="btn-group">
                                        <button class="btn btn-outline-secondary active">All</button>
                                        <button class="btn btn-outline-secondary">Sent</button>
                                        <button class="btn btn-outline-secondary">Failed</button>
                                    </div>
                                    <input type="search" class="form-control" placeholder="Search messages" style="max-width: 220px;">
                                    <button class="btn btn-outline-primary"><i class="fas fa-file-export me-2"></i>Export CSV</button>
                                </div>
                            </div>
                            <div class="card">
                                <div class="table-responsive">
                                    <table class="table table-hover mb-0">
                                        <thead>
                                            <tr>
                                                <th>Message ID</th>
                                                <th>To</th>
                                                <th>Message</th>
                                                <th>Status</th>
                                                <th>Time</th>
                                            </tr>
                                        </thead>
                                        <tbody id="messages-table">
                                            <tr>
                                                <td><code>msg_001</code></td>
                                                <td>+1234567890</td>
                                                <td>Hello! This is a test message.</td>
                                                <td><span class="badge bg-success">Delivered</span></td>
                                                <td>2:30 PM</td>
                                            </tr>
                                            <tr>
                                                <td><code>msg_002</code></td>
                                                <td>+0987654321</td>
                                                <td>Welcome to our service!</td>
                                                <td><span class="badge bg-warning">Sent</span></td>
                                                <td>1:15 PM</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                                <p id="messages-empty" class="text-muted p-3 mb-0" style="display: none;">No messages yet. Send your first message from the dashboard.</p>
                            </div>
                        </div>

                        <!-- Chatbot Section -->
                        <div id="dashboard-chatbot" class="dashboard-section" style="display: none;">
                            <div class="d-flex justify-content-between align-items-center mb-4">
                                <h2>Chatbot Management</h2>
                                <button class="btn btn-primary" id="add-chatbot-rule-btn">
                                    <i class="fas fa-plus me-2"></i>Add Rule
                                </button>
                            </div>
                            <div class="row">
                                <div class="col-md-8">
                                    <div class="card">
                                        <div class="card-header">
                                            <h5>Chatbot Rules</h5>
                                        </div>
                                        <div class="card-body" id="chatbot-rules">
                                            <!-- Chatbot rules will be populated here -->
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="card">
                                        <div class="card-header">
                                            <h5>Test Chatbot</h5>
                                        </div>
                                        <div class="card-body">
                                            <div class="mb-3">
                                                <input type="text" class="form-control" placeholder="Type a message..." id="test-message">
                                            </div>
                                            <button class="btn btn-primary w-100" id="test-chatbot-btn">Test Response</button>
                                            <div id="chatbot-response" class="mt-3"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Webhooks Section -->
                        <div id="dashboard-webhooks" class="dashboard-section" style="display: none;">
                            <div class="d-flex justify-content-between align-items-center mb-4">
                                <h2>Webhook Configuration</h2>
                                <button class="btn btn-primary" id="add-webhook-btn">
                                    <i class="fas fa-plus me-2"></i>Add Webhook
                                </button>
                            </div>
                            <div class="row g-4">
                                <div class="col-md-8">
                                    <div class="card">
                                        <div class="card-header">
                                            <h5>Active Webhooks</h5>
                                        </div>
                                        <div class="card-body">
                                            <div class="table-responsive">
                                                <table class="table table-hover">
                                                    <thead>
                                                        <tr>
                                                            <th>URL</th>
                                                            <th>Events</th>
                                                            <th>Status</th>
                                                            <th>Last Delivery</th>
                                                            <th>Actions</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <tr>
                                                            <td><code>https://api.example.com/webhook</code></td>
                                                            <td><span class="badge bg-primary me-1">message.sent</span><span class="badge bg-success">message.delivered</span></td>
                                                            <td><span class="badge bg-success">Active</span></td>
                                                            <td>2 minutes ago</td>
                                                            <td>
                                                                <button class="btn btn-sm btn-outline-primary me-1">Test</button>
                                                                <button class="btn btn-sm btn-outline-danger">Delete</button>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="card">
                                        <div class="card-header">
                                            <h5>Webhook Events</h5>
                                        </div>
                                        <div class="card-body">
                                            <p class="text-muted small">Available webhook events:</p>
                                            <ul class="list-unstyled">
                                                <li><code>message.sent</code> - Message sent successfully</li>
                                                <li><code>message.delivered</code> - Message delivered</li>
                                                <li><code>message.failed</code> - Message delivery failed</li>
                                                <li><code>session.connected</code> - WhatsApp session connected</li>
                                                <li><code>session.disconnected</code> - WhatsApp session disconnected</li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Analytics Section -->
                        <div id="dashboard-analytics" class="dashboard-section" style="display: none;">
                            <div class="d-flex justify-content-between align-items-center mb-4">
                                <h2>Advanced Analytics</h2>
                                <div class="btn-group">
                                    <button class="btn btn-outline-secondary active">7 Days</button>
                                    <button class="btn btn-outline-secondary">30 Days</button>
                                    <button class="btn btn-outline-secondary">90 Days</button>
                                </div>
                            </div>
                            
                            <!-- Key Metrics -->
                            <div class="row g-4 mb-4">
                                <div class="col-lg-3 col-md-6">
                                    <div class="card text-center">
                                        <div class="card-body">
                                            <div class="display-6 text-primary mb-2">98.5%</div>
                                            <h6>Delivery Rate</h6>
                                            <small class="text-success"><i class="fas fa-arrow-up"></i> +2.3%</small>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-6">
                                    <div class="card text-center">
                                        <div class="card-body">
                                            <div class="display-6 text-success mb-2">1.2s</div>
                                            <h6>Avg Response Time</h6>
                                            <small class="text-success"><i class="fas fa-arrow-down"></i> -0.3s</small>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-6">
                                    <div class="card text-center">
                                        <div class="card-body">
                                            <div class="display-6 text-warning mb-2">15.2%</div>
                                            <h6>Error Rate</h6>
                                            <small class="text-danger"><i class="fas fa-arrow-up"></i> +1.1%</small>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-6">
                                    <div class="card text-center">
                                        <div class="card-body">
                                            <div class="display-6 text-info mb-2">4.8</div>
                                            <h6>Avg Session Duration (hrs)</h6>
                                            <small class="text-success"><i class="fas fa-arrow-up"></i> +0.5hrs</small>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Charts -->
                            <div class="row g-4">
                                <div class="col-lg-8">
                                    <div class="card">
                                        <div class="card-header">
                                            <h5>Message Volume Trends</h5>
                                        </div>
                                        <div class="card-body">
                                            <canvas id="volumeChart" height="100"></canvas>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="card">
                                        <div class="card-header">
                                            <h5>Message Status Distribution</h5>
                                        </div>
                                        <div class="card-body">
                                            <canvas id="statusChart" height="200"></canvas>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Geographic Distribution -->
                            <div class="row g-4 mt-2">
                                <div class="col-lg-6">
                                    <div class="card">
                                        <div class="card-header">
                                            <h5>Top Countries</h5>
                                        </div>
                                        <div class="card-body">
                                            <div class="d-flex justify-content-between align-items-center mb-2">
                                                <span><i class="flag-icon flag-icon-us me-2"></i>United States</span>
                                                <span class="fw-bold">2,450 messages</span>
                                            </div>
                                            <div class="progress mb-3" style="height: 8px;">
                                                <div class="progress-bar" style="width: 85%"></div>
                                            </div>
                                            <div class="d-flex justify-content-between align-items-center mb-2">
                                                <span><i class="flag-icon flag-icon-gb me-2"></i>United Kingdom</span>
                                                <span class="fw-bold">1,890 messages</span>
                                            </div>
                                            <div class="progress mb-3" style="height: 8px;">
                                                <div class="progress-bar" style="width: 65%"></div>
                                            </div>
                                            <div class="d-flex justify-content-between align-items-center mb-2">
                                                <span><i class="flag-icon flag-icon-ca me-2"></i>Canada</span>
                                                <span class="fw-bold">1,234 messages</span>
                                            </div>
                                            <div class="progress mb-3" style="height: 8px;">
                                                <div class="progress-bar" style="width: 42%"></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="card">
                                        <div class="card-header">
                                            <h5>Peak Usage Hours</h5>
                                        </div>
                                        <div class="card-body">
                                            <canvas id="hourlyChart" height="200"></canvas>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Billing Section -->
                        <div id="dashboard-billing" class="dashboard-section" style="display: none;">
                            <div class="d-flex justify-content-between align-items-center mb-4">
                                <h2>Billing & Usage</h2>
                                <div class="d-flex gap-2">
                                    <button class="btn btn-outline-primary">Download Invoice</button>
                                    <button class="btn btn-primary" data-view="pricing">Upgrade Plan</button>
                                </div>
                            </div>

                            <!-- Current Plan -->
                            <div class="row g-4 mb-4">
                                <div class="col-lg-8">
                                    <div class="card">
                                        <div class="card-header d-flex justify-content-between align-items-center">
                                            <h5>Current Plan: Basic</h5>
                                            <span class="badge bg-success fs-6">Active</span>
                                        </div>
                                        <div class="card-body">
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <h6>Plan Details</h6>
                                                    <ul class="list-unstyled">
                                                        <li><i class="fas fa-check text-success me-2"></i>10,000 messages/month</li>
                                                        <li><i class="fas fa-check text-success me-2"></i>Priority support</li>
                                                        <li><i class="fas fa-check text-success me-2"></i>Advanced analytics</li>
                                                        <li><i class="fas fa-check text-success me-2"></i>Webhook support</li>
                                                    </ul>
                                                </div>
                                                <div class="col-md-6">
                                                    <h6>Billing Cycle</h6>
                                                    <p><strong>Next billing date:</strong> January 15, 2025</p>
                                                    <p><strong>Amount:</strong> $29.00</p>
                                                    <p><strong>Payment method:</strong> •••• 4242</p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="card">
                                        <div class="card-header">
                                            <h5>Usage This Month</h5>
                                        </div>
                                        <div class="card-body">
                                            <div class="mb-3">
                                                <div class="d-flex justify-content-between mb-1">
                                                    <span>Messages</span>
                                                    <span>1,250 / 10,000</span>
                                                </div>
                                                <div class="progress">
                                                    <div class="progress-bar" style="width: 12.5%"></div>
                                                </div>
                                            </div>
                                            <div class="mb-3">
                                                <div class="d-flex justify-content-between mb-1">
                                                    <span>API Calls</span>
                                                    <span>3,420 / ∞</span>
                                                </div>
                                                <div class="progress">
                                                    <div class="progress-bar bg-success" style="width: 100%"></div>
                                                </div>
                                            </div>
                                            <small class="text-muted">Resets on January 15, 2025</small>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Billing History -->
                            <div class="card">
                                <div class="card-header">
                                    <h5>Billing History</h5>
                                </div>
                                <div class="card-body">
                                    <div class="table-responsive">
                                        <table class="table table-hover">
                                            <thead>
                                                <tr>
                                                    <th>Date</th>
                                                    <th>Description</th>
                                                    <th>Amount</th>
                                                    <th>Status</th>
                                                    <th>Invoice</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr>
                                                    <td>Dec 15, 2024</td>
                                                    <td>Basic Plan - Monthly</td>
                                                    <td>$29.00</td>
                                                    <td><span class="badge bg-success">Paid</span></td>
                                                    <td><a href="#" class="btn btn-sm btn-outline-primary">Download</a></td>
                                                </tr>
                                                <tr>
                                                    <td>Nov 15, 2024</td>
                                                    <td>Basic Plan - Monthly</td>
                                                    <td>$29.00</td>
                                                    <td><span class="badge bg-success">Paid</span></td>
                                                    <td><a href="#" class="btn btn-sm btn-outline-primary">Download</a></td>
                                                </tr>
                                                <tr>
                                                    <td>Oct 15, 2024</td>
                                                    <td>Basic Plan - Monthly</td>
                                                    <td>$29.00</td>
                                                    <td><span class="badge bg-success">Paid</span></td>
                                                    <td><a href="#" class="btn btn-sm btn-outline-primary">Download</a></td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Dashboard functionality
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl)
            })
            
            // Dashboard tab navigation
            const sidebarLinks = document.querySelectorAll('.sidebar-nav .nav-link[data-section]');
            const dashboardSections = document.querySelectorAll('.dashboard-section');
            
            sidebarLinks.forEach(link => {
                link.addEventListener('click', function(e) {
                    e.preventDefault();
                    
                    // Remove active class from all links
                    sidebarLinks.forEach(l => l.classList.remove('active'));
                    // Add active class to clicked link
                    this.classList.add('active');
                    
                    // Hide all sections
                    dashboardSections.forEach(section => {
                        section.style.display = 'none';
                    });
                    
                    // Show selected section
                    const targetSection = this.getAttribute('data-section');
                    const sectionElement = document.getElementById(`dashboard-${targetSection}`);
                    if (sectionElement) {
                        sectionElement.style.display = 'block';
                        
                        // Load section-specific data
                        loadSectionData(targetSection);
                    }
                });
            });
            
            // Load initial data with a small delay to ensure authentication is ready
            setTimeout(async () => {
                await loadDashboardData();
                await loadSectionData('overview');
            }, 100);
            
            // Toggle API key visibility
            const toggleBtn = document.getElementById('toggle-api-key');
            const apiKeyInput = document.getElementById('api-key');
            const apiKeyIcon = document.getElementById('api-key-icon');
            
            if (toggleBtn) {
                toggleBtn.addEventListener('click', function() {
                    if (apiKeyInput.type === 'password') {
                        apiKeyInput.type = 'text';
                        apiKeyIcon.className = 'fas fa-eye-slash';
                    } else {
                        apiKeyInput.type = 'password';
                        apiKeyIcon.className = 'fas fa-eye';
                    }
                });
            }
            
            // Copy API key functionality
            const copyBtn = document.getElementById('copy-api-key');
            if (copyBtn) {
                copyBtn.addEventListener('click', function() {
                    const apiKey = apiKeyInput.value;
                    navigator.clipboard.writeText(apiKey).then(function() {
                        // Show success message
                        const originalHTML = copyBtn.innerHTML;
                        copyBtn.innerHTML = '<i class="fas fa-check"></i>';
                        copyBtn.classList.remove('btn-outline-secondary');
                        copyBtn.classList.add('btn-success');
                        
                        setTimeout(function() {
                            copyBtn.innerHTML = originalHTML;
                            copyBtn.classList.remove('btn-success');
                            copyBtn.classList.add('btn-outline-secondary');
                        }, 2000);
                    });
                });
            }
            
            // Generate API key functionality
            const generateBtn = document.getElementById('generate-api-key');
            if (generateBtn) {
                generateBtn.addEventListener('click', async function() {
                    try {
                        const response = await fetch('/api/user/generate-api-key', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        });
                        
                        const data = await response.json();
                        
                        if (response.ok) {
                            // Update the input field
                            apiKeyInput.value = data.apiKey;
                            
                            // Replace generate button with toggle and copy buttons
                            generateBtn.outerHTML = `
                                <button class="btn btn-outline-secondary" type="button" id="toggle-api-key">
                                    <i class="fas fa-eye" id="api-key-icon"></i>
                                </button>
                                <button class="btn btn-outline-secondary" type="button" id="copy-api-key">
                                    <i class="fas fa-copy"></i>
                                </button>
                            `;
                            
                            // Re-initialize event listeners
                            location.reload();
                        } else {
                            alert('Error generating API key: ' + data.message);
                        }
                    } catch (error) {
                        alert('Error generating API key. Please try again.');
                    }
                });
            }
            
            // Session management
            document.querySelectorAll('[data-action="disconnect-session"]').forEach(button => {
                button.addEventListener('click', async function() {
                    const sessionId = this.getAttribute('data-session');
                    if (confirm('Are you sure you want to disconnect this session?')) {
                        try {
                            await makeApiCall(`/api/whatsapp/sessions/${sessionId}`, {
                                method: 'DELETE'
                            });
                            
                            const sessionCard = this.closest('.session-card');
                            sessionCard.style.opacity = '0.5';
                            this.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Disconnecting...';
                            this.disabled = true;
                            
                            setTimeout(() => {
                                location.reload();
                            }, 2000);
                        } catch (error) {
                            alert('Error disconnecting session: ' + error.message);
                        }
                    }
                });
            });
            
            document.querySelectorAll('[data-action="connect-session"]').forEach(button => {
                button.addEventListener('click', async function() {
                    const sessionId = this.getAttribute('data-session');
                    this.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Connecting...';
                    this.disabled = true;
                    
                    try {
                        // For connecting, we need to get the QR code first
                        const response = await makeApiCall(`/api/whatsapp/sessions/${sessionId}/qr`);
                        
                        if (response.success) {
                            // Show QR code or redirect to connection page
                            alert('Please scan the QR code to connect your WhatsApp session.');
                            setTimeout(() => {
                                location.reload();
                            }, 3000);
                        } else {
                            throw new Error(response.message || 'Failed to get QR code');
                        }
                    } catch (error) {
                        this.innerHTML = '<i class="fas fa-link me-1"></i>Connect';
                        this.disabled = false;
                        alert('Error connecting session: ' + error.message);
                    }
                });
            });
            
            // Create new session
            document.getElementById('create-session-btn')?.addEventListener('click', async function() {
                try {
                    const response = await makeApiCall('/api/whatsapp/sessions', {
                        method: 'POST',
                        body: JSON.stringify({
                            name: 'Session ' + new Date().toLocaleString(),
                            settings: {
                                autoReply: false,
                                allowGroups: true,
                                allowUnknown: true
                            }
                        })
                    });
                    
                    alert('Session created successfully!');
                    location.reload();
                } catch (error) {
                    alert('Error creating session: ' + error.message);
                }
            });
            
            document.getElementById('create-first-session-btn')?.addEventListener('click', async function() {
                try {
                    const response = await makeApiCall('/api/whatsapp/sessions', {
                        method: 'POST',
                        body: JSON.stringify({
                            name: 'Session ' + new Date().toLocaleString(),
                            settings: {
                                autoReply: false,
                                allowGroups: true,
                                allowUnknown: true
                            }
                        })
                    });
                    
                    alert('Session created successfully!');
                    location.reload();
                } catch (error) {
                    alert('Error creating session: ' + error.message);
                }
            });
            
            // Quick message form
            document.getElementById('quick-message-form')?.addEventListener('submit', async function(e) {
                e.preventDefault();
                
                const phoneNumber = this.querySelector('input[type="tel"]').value;
                const message = this.querySelector('textarea').value;
                
                // Get the first active session
                try {
                    const sessionsResponse = await makeApiCall('/api/whatsapp/sessions');
                    const sessions = sessionsResponse.data.sessions;
                    const activeSession = sessions.find(s => s.isConnected);
                    
                    if (!activeSession) {
                        alert('No active WhatsApp session found. Please connect a session first.');
                        return;
                    }
                    
                    const response = await makeApiCall(`/api/whatsapp/sessions/${activeSession.sessionId}/messages`, {
                        method: 'POST',
                        body: JSON.stringify({
                            to: phoneNumber,
                            message: message
                        })
                    });
                    
                    alert('Message sent successfully!');
                    this.reset();
                } catch (error) {
                    alert('Error sending message: ' + error.message);
                }
            });
            
            // Auto-refresh dashboard stats every 30 seconds (only if user is logged in)
            setInterval(async function() {
                const isLoggedIn = sessionStorage.getItem('isLoggedIn') === 'true';
                if (isLoggedIn) {
                    await loadDashboardData();
                }
            }, 30000);
        });
        
        // Global API functions
        function getApiKey() {
            const apiKeyInput = document.getElementById('api-key');
            const apiKey = apiKeyInput ? apiKeyInput.value : '';
            
            if (!apiKey || apiKey === 'Not generated') {
                throw new Error('API key not found. Please generate an API key first.');
            }
            
            return apiKey;
        }
        
        function getJwtToken() {
            // Try to get JWT token from sessionStorage
            const token = sessionStorage.getItem('authToken');
            if (!token) {
                throw new Error('Authentication token not found. Please log in again.');
            }
            return token;
        }
        
        function getCookie(name) {
            const value = `; ${document.cookie}`;
            const parts = value.split(`; ${name}=`);
            if (parts.length === 2) return parts.pop().split(';').shift();
            return null;
        }
        
        function getApiKeyHeaders() {
            const apiKey = getApiKey();
            return {
                'Content-Type': 'application/json',
                'x-api-key': apiKey
            };
        }
        
        function getJwtHeaders() {
            const token = getJwtToken();
            return {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${token}`
            };
        }
        
        async function makeApiCall(endpoint, options = {}) {
            try {
                // Check if user is logged in first
                const isLoggedIn = sessionStorage.getItem('isLoggedIn') === 'true';
                if (!isLoggedIn) {
                    throw new Error('User not logged in');
                }
                
                // Determine authentication method based on endpoint
                let headers;
                if (endpoint.includes('/api/whatsapp/')) {
                    headers = getApiKeyHeaders();
                } else if (endpoint.includes('/api/analytics/') || endpoint.includes('/api/user/')) {
                    headers = getJwtHeaders();
                } else {
                    // Default to JWT for other endpoints
                    headers = getJwtHeaders();
                }
                
                const response = await fetch(endpoint, {
                    headers: {
                        ...headers,
                        ...options.headers
                    },
                    ...options
                });
                
                if (!response.ok) {
                    const errorData = await response.json().catch(() => ({}));
                    
                    // Handle specific authentication errors
                    if (response.status === 401) {
                        if (errorData.error === 'Access token required') {
                            throw new Error('Please log in to access this feature.');
                        } else if (errorData.error === 'API key required') {
                            throw new Error('Please generate an API key first.');
                        } else if (errorData.error === 'Invalid API key') {
                            throw new Error('Invalid API key. Please generate a new one.');
                        }
                    }
                    
                    throw new Error(errorData.message || errorData.error || `HTTP error! status: ${response.status}`);
                }
                
                return await response.json();
            } catch (error) {
                // Only log errors that aren't expected authentication issues
                if (!error.message.includes('not logged in') && 
                    !error.message.includes('log in') && 
                    !error.message.includes('API key')) {
                    console.error('API call failed:', error);
                }
                throw error;
            }
        }
        
        // Load dashboard overview data
        async function loadDashboardData() {
            try {
                showLoading('overview');
                
                // Check if user is logged in
                const isLoggedIn = sessionStorage.getItem('isLoggedIn') === 'true';
                if (!isLoggedIn) {
                    // Show default data for non-logged in users
                    updateElement('messages-sent', '0');
                    updateElement('active-sessions', '0');
                    updateElement('delivery-rate', '0%');
                    updateElement('total-sessions', '0');
                    updateElement('plan-badge', 'Free Plan');
                    hideLoading('overview');
                    return;
                }
                
                // Check if JWT token exists
                const token = sessionStorage.getItem('authToken');
                if (!token) {
                    updateElement('messages-sent', '0');
                    updateElement('active-sessions', '0');
                    updateElement('delivery-rate', '0%');
                    updateElement('total-sessions', '0');
                    updateElement('plan-badge', 'Free Plan');
                    hideLoading('overview');
                    return;
                }
                
                const response = await makeApiCall('/api/analytics/dashboard?period=30d');
                const stats = response.data.overview;
                
                // Update stats cards
                updateElement('messages-sent', (stats.totalMessages || 0).toLocaleString());
                updateElement('active-sessions', stats.activeSessions || 0);
                updateElement('delivery-rate', calculateDeliveryRate(stats) + '%');
                updateElement('total-sessions', stats.totalSessions || 0);
                
                // Update plan badge
                updateElement('plan-badge', stats.plan ? stats.plan.charAt(0).toUpperCase() + stats.plan.slice(1) + ' Plan' : 'Free Plan');
                
                hideLoading('overview');
            } catch (error) {
                console.error('Error loading dashboard data:', error);
                hideLoading('overview');
                
                // Show user-friendly error message
                if (error.message.includes('log in')) {
                    showError('overview', 'Please log in to view dashboard data');
                } else {
                    showError('overview', 'Failed to load dashboard data: ' + error.message);
                }
            }
        }
        
        // Load section-specific data
        async function loadSectionData(section) {
            switch (section) {
                case 'overview':
                    await loadDashboardData();
                    break;
                case 'sessions':
                    await loadSessionsData();
                    break;
                case 'messages':
                    await loadMessagesData();
                    break;
                case 'webhooks':
                    await loadWebhooksData();
                    break;
                case 'analytics':
                    await loadAnalyticsData();
                    break;
                case 'billing':
                    await loadBillingData();
                    break;
            }
        }
        
        // Load sessions data
        async function loadSessionsData() {
            try {
                showLoading('sessions');
                
                // Check if user is logged in
                const isLoggedIn = sessionStorage.getItem('isLoggedIn') === 'true';
                if (!isLoggedIn) {
                    showError('sessions', 'Please log in to view sessions');
                    hideLoading('sessions');
                    return;
                }
                
                // Check if API key exists for WhatsApp endpoints
                const apiKey = document.getElementById('api-key')?.value;
                if (!apiKey || apiKey === 'Not generated') {
                    showError('sessions', 'Please generate an API key first');
                    hideLoading('sessions');
                    return;
                }
                
                const response = await makeApiCall('/api/whatsapp/sessions');
                const sessions = response.data.sessions;
                
                const container = document.getElementById('sessions-container');
                if (sessions.length === 0) {
                    container.innerHTML = `
                        <div class="col-12">
                            <div class="text-center py-5">
                                <i class="fas fa-mobile-alt fa-3x text-muted mb-3"></i>
                                <h5 class="text-muted">No sessions yet</h5>
                                <p class="text-muted">Create your first WhatsApp session to get started</p>
                                <button class="btn btn-primary" id="create-first-session-btn">
                                    <i class="fas fa-plus me-2"></i>Create Session
                                </button>
                            </div>
                        </div>
                    `;
                } else {
                    container.innerHTML = sessions.map((session, index) => `
                        <div class="col-md-6">
                            <div class="card session-card">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-start mb-3">
                                        <h5>Session #${index + 1}</h5>
                                        <span class="badge bg-${session.isConnected ? 'success' : 'secondary'}">
                                            ${session.isConnected ? 'Connected' : 'Disconnected'}
                                        </span>
                                    </div>
                                    <p><strong>Session ID:</strong> ${session.sessionId}</p>
                                    <p><strong>Phone:</strong> ${session.phoneNumber || 'Not connected'}</p>
                                    <p><strong>Status:</strong> ${session.isConnected ? 'Connected' : 'Disconnected'}</p>
                                    <p><strong>Created:</strong> ${new Date(session.createdAt).toLocaleDateString()}</p>
                                    <p><strong>Messages:</strong> ${session.messageStats.total} total (${session.messageStats.sent} sent, ${session.messageStats.received} received)</p>
                                    ${session.isConnected ? 
                                        `<button class="btn btn-outline-danger btn-sm" data-action="disconnect-session" data-session="${session.sessionId}">
                                            <i class="fas fa-unlink me-1"></i>Disconnect
                                        </button>` : 
                                        `<button class="btn btn-outline-primary btn-sm" data-action="connect-session" data-session="${session.sessionId}">
                                            <i class="fas fa-link me-1"></i>Connect
                                        </button>`
                                    }
                                </div>
                            </div>
                        </div>
                    `).join('');
                }
                
                hideLoading('sessions');
            } catch (error) {
                console.error('Error loading sessions data:', error);
                hideLoading('sessions');
                
                if (error.message.includes('log in')) {
                    showError('sessions', 'Please log in to view sessions');
                } else if (error.message.includes('API key')) {
                    showError('sessions', 'Please generate an API key first');
                } else {
                    showError('sessions', 'Failed to load sessions data: ' + error.message);
                }
            }
        }
        
        // Load messages data
        async function loadMessagesData() {
            try {
                showLoading('messages');
                // Get messages from all sessions
                const response = await makeApiCall('/api/analytics/messages?period=7d');
                const timeSeries = response.data.timeSeries;
                
                // Update messages table with recent data
                const messagesTable = document.getElementById('messages-table');
                if (timeSeries && timeSeries.length > 0) {
                    // This would be populated with actual message data
                    // For now, we'll show the time series data
                    messagesTable.innerHTML = timeSeries.slice(0, 10).map((item, index) => `
                        <tr>
                            <td><code>msg_${index + 1}</code></td>
                            <td>+1234567890</td>
                            <td>Sample message from ${item._id}</td>
                            <td><span class="badge bg-success">Delivered</span></td>
                            <td>${new Date().toLocaleTimeString()}</td>
                        </tr>
                    `).join('');
                } else {
                    messagesTable.innerHTML = `
                        <tr>
                            <td colspan="5" class="text-center text-muted">No messages found</td>
                        </tr>
                    `;
                }
                
                hideLoading('messages');
            } catch (error) {
                console.error('Error loading messages data:', error);
                hideLoading('messages');
                showError('messages', 'Failed to load messages data');
            }
        }
        
        // Load webhooks data
        async function loadWebhooksData() {
            try {
                showLoading('webhooks');
                // Webhook data would come from a webhook management API
                // For now, we'll show placeholder data
                hideLoading('webhooks');
            } catch (error) {
                console.error('Error loading webhooks data:', error);
                hideLoading('webhooks');
                showError('webhooks', 'Failed to load webhooks data');
            }
        }
        
        // Load analytics data
        async function loadAnalyticsData() {
            try {
                showLoading('analytics');
                const response = await makeApiCall('/api/analytics/dashboard?period=30d');
                const stats = response.data;
                
                // Update analytics metrics
                updateElement('delivery-rate-analytics', calculateDeliveryRate(stats.overview) + '%');
                updateElement('total-messages-analytics', (stats.overview.totalMessages || 0).toLocaleString());
                updateElement('active-sessions-analytics', stats.overview.activeSessions || 0);
                
                // Update message status distribution
                if (stats.messageStatus) {
                    const statusData = stats.messageStatus;
                    const total = Object.values(statusData).reduce((sum, count) => sum + count, 0);
                    
                    // Update status chart data (this would integrate with Chart.js)
                    console.log('Message status data:', statusData);
                }
                
                hideLoading('analytics');
            } catch (error) {
                console.error('Error loading analytics data:', error);
                hideLoading('analytics');
                showError('analytics', 'Failed to load analytics data');
            }
        }
        
        // Load billing data
        async function loadBillingData() {
            try {
                showLoading('billing');
                const response = await makeApiCall('/api/user/profile');
                const user = response.user;
                
                // Update billing information
                if (user && user.subscription) {
                    updateElement('plan-name', user.subscription.plan || 'Free');
                    updateElement('plan-status', user.subscription.status || 'active');
                    updateElement('next-billing', user.subscription.nextBillingDate || 'N/A');
                }
                
                hideLoading('billing');
            } catch (error) {
                console.error('Error loading billing data:', error);
                hideLoading('billing');
                showError('billing', 'Failed to load billing data');
            }
        }
        
        // Utility functions
        function calculateDeliveryRate(stats) {
            if (!stats.sentMessages || stats.sentMessages === 0) return '0.0';
            const delivered = stats.messageStatus?.delivered || 0;
            return ((delivered / stats.sentMessages) * 100).toFixed(1);
        }
        
        function updateElement(id, value) {
            const element = document.getElementById(id);
            if (element) {
                element.textContent = value;
            }
        }
        
        function showLoading(section) {
            const sectionElement = document.getElementById(`dashboard-${section}`);
            if (sectionElement) {
                sectionElement.classList.add('loading');
            }
        }
        
        function hideLoading(section) {
            const sectionElement = document.getElementById(`dashboard-${section}`);
            if (sectionElement) {
                sectionElement.classList.remove('loading');
            }
        }
        
        function showError(section, message) {
            const sectionElement = document.getElementById(`dashboard-${section}`);
            if (sectionElement) {
                const errorDiv = document.createElement('div');
                errorDiv.className = 'alert alert-danger';
                errorDiv.textContent = message;
                sectionElement.appendChild(errorDiv);
            }
        }
    </script>

